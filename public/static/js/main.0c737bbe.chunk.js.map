{"version":3,"sources":["utils/socket.js","components/MessageActions/MessageActions.js","components/MessageFeedback/Message.js","components/SelectOponent/SelectOponent.js","components/Controls/Controls.js","components/DescartOneCard/DescartOneCard.js","components/EndGameOption/EndGameOption.js","components/Instructions/Instructions.js","components/Main/Main.js","components/MessageAttacked/MessageAttacked.js","components/MessageAttackedGlobal/MessageAttackedGlobal.js","components/MessageBlocked/MessageBlocked.js","components/MessageCoup/MessageCoup.js","components/MessageGame/MessageGame.js","components/MessageLost/MessageLost.js","components/MessageLostCard/MessageLostCard.js","components/MessageWin/MessageWin.js","components/Starting/Starting.js","pages/Home/Home.js","utils/axios.js","pages/Login/Login.js","pages/Start/Start.js","utils/api.js","App.js","reportWebVitals.js","reducers/index.js","reducers/actionsReducer.js","reducers/userReducer.js","reducers/gameReducer.js","reducers/gamesReducer.js","reducers/attackerReducer.js","reducers/attackerGlobalReducer.js","reducers/blockerReducer.js","reducers/variableReducer.js","reducers/resultReducer.js","reducers/descartCardReducer.js","reducers/coupReducer.js","index.js"],"names":["socket","init","dispatch","socketClient","on","data","type","payload","dataGame","myUser","gamer","filter","g","connectionId","id","otherUsers","variable","msg","emitUseCard","card","idGame","username","attacker","emit","emitUseCardGlobal","emitBlockCard","blocker","emitAllow","attacked","attackedBy","emitLostCard","loser","emitLostCardSelected","emitLostGame","MessageActions","action","useSelector","state","className","Message","setError","useEffect","setTimeout","SelectOponent","gamers","setCardSelected","user","game","useDispatch","style","display","map","onClick","userSelected","money","length","cards","playCard","Controls","useState","showMenu","setShowMenu","error","cardSelected","turn","playCardGlobal","blockCard","allow","distrust","userAttacker","u","c","mon","index","src","alt","DescartOneCard","descart","returnSelected","i","indexOf","splice","emitReturnCardAmbassador","returnCard","EndGameOption","console","log","Instructions","position","showInstruction","setShowInstruction","top","Main","margin","border","marginTop","MessageAttacked","MessageAttackedGlobal","attackerGlobal","time","setTime","cardExist","MessageBlocked","blockedBy","userBlocker","MessageCoup","coup","deleteCard","MessageGame","MessageLost","history","useNavigate","localStorage","removeItem","MessageLostCard","MessageWin","Starting","createdBy","Home","useParams","variables","result","getItem","emitGetGame","clientAxios","axios","create","baseURL","Login","password","setData","onChange","e","prev","target","name","value","placeholder","preventDefault","post","then","res","setItem","token","catch","err","Start","myGame","setMyGame","games","currentGame","joinGame","emitJoinGame","Math","floor","random","emitOpenGame","disabled","borderBottom","flexDirection","currentUser","a","headers","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c737bbe.chunk.js","sourcesContent":["import socketClient from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nconst SERVER = 'https://coup-alan.herokuapp.com';\r\n\r\nexport const init = (dispatch) => {\r\n    socket = socketClient(SERVER);\r\n\r\n    socket.on('gameCreated', (data) => {\r\n        dispatch({\r\n            type: 'GET_GAMES',\r\n            payload: data\r\n        });\r\n    });\r\n\r\n    // emitGetGame\r\n    socket.on('getGame', (data) => {\r\n        let dataGame = data;\r\n        const myUser = data?.gamer.filter(\r\n            (g) => g.connectionId === socket.id\r\n        );\r\n        const otherUsers = data?.gamer.filter(\r\n            (g) => g.connectionId !== socket.id\r\n        );\r\n        dataGame.gamer = otherUsers\r\n        dataGame.myUser = myUser[0]\r\n\r\n        dispatch({\r\n            type: 'GET_GAME',\r\n            payload: dataGame\r\n        });\r\n        dispatch({\r\n            type: 'SET_ACTION',\r\n            payload: null\r\n        });\r\n    });\r\n\r\n    socket.on('attacked', (data) => {\r\n        dispatch({\r\n            type: 'SET_ATTACKER',\r\n            payload: data\r\n        });\r\n    });\r\n    socket.on('coup', (data) => {\r\n        dispatch({\r\n            type: 'SET_COUP',\r\n            payload: data\r\n        });\r\n    });\r\n\r\n    socket.on('attackedGlobal', (data) => {\r\n        dispatch({\r\n            type: 'SET_ATTACKER_GLOBAL',\r\n            payload: data\r\n        });\r\n    });\r\n\r\n    socket.on('blocked', (data) => {\r\n        dispatch({\r\n            type: 'SET_BLOCKER',\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: 'SET_ACTION',\r\n            payload: null\r\n        });\r\n    });\r\n\r\n    socket.on('lostCard', () => {\r\n        dispatch({\r\n            type: 'LOST_CARD',\r\n            payload: {\r\n                variable: 'lostCard'\r\n            }\r\n        });\r\n    });\r\n\r\n    socket.on('descartOneCard', (data) => {\r\n        dispatch({\r\n            type: 'DESCART_CARD',\r\n            payload: data\r\n        });\r\n    });\r\n\r\n    socket.on('lostGame', (data) => {\r\n        dispatch({\r\n            type: 'RESULT',\r\n            payload: 'lost'\r\n        });\r\n    });\r\n\r\n    socket.on('win', (data) => {\r\n        dispatch({\r\n            type: 'RESULT',\r\n            payload: 'win'\r\n        });\r\n    });\r\n\r\n    socket.on('actionOtherUser', (data) => {\r\n        dispatch({\r\n            type: 'SET_ACTION',\r\n            payload: {\r\n                msg: data\r\n            }\r\n        });\r\n    });\r\n    \r\n}\r\n\r\nexport const emitOpenGame = (username, idGame) => {\r\n    socket.emit('createGame', { username, idGame });\r\n}\r\n\r\nexport const emitDeleteGame = (username, idGame) => {\r\n    socket.emit('deleteGame', { username, idGame });\r\n}\r\n\r\nexport const emitGetGames = () => {\r\n    socket.emit('getGames');\r\n}\r\n\r\nexport const emitGetGame = (idGame, username) => {\r\n    socket.emit('getGame', { idGame, username });\r\n}\r\n\r\nexport const emitJoinGame = (username, idGame) => {\r\n    socket.emit('joinGame', { username, idGame });\r\n}\r\n\r\nexport const emitStartGame = (idGame) => {\r\n    socket.emit('startGame', { idGame });\r\n}\r\n\r\n// FUNTIONS GAME\r\nexport const emitTakeMoney = (idGame, username) => {\r\n    socket.emit('takeMoney', { idGame, username });\r\n}\r\n\r\nexport const emitUseCard = (card, idGame, username, attacker) => {\r\n    socket.emit('useCard', { card, idGame, username, attacker});\r\n}\r\n// Embajador y Duque\r\nexport const emitUseCardGlobal = (card, idGame, attacker) => {\r\n    socket.emit('useCardGlobal', { card, idGame, attacker});\r\n}\r\nexport const emitReturnCardAmbassador = (data) => {\r\n    socket.emit('useReturnCardAmbassador',  data );\r\n}\r\n\r\n\r\nexport const emitBlockCard = (card, idGame, attacker, blocker) => {\r\n    socket.emit('blockCard', { card, idGame, attacker, blocker});\r\n}\r\nexport const emitAllow = (idGame, attacked, attackedBy, card) => {\r\n    socket.emit('allow', { idGame, attacked, attackedBy, card});\r\n}\r\n\r\nexport const emitAllowBlock = (idGame, attacked, attackedBy, card) => {\r\n    socket.emit('allowBlock', { idGame, attacked, attackedBy, card});\r\n}\r\nexport const emitLostCard = (idGame, loser) => {\r\n    socket.emit('lostCard', { idGame, loser});\r\n}\r\nexport const emitLostCardSelected = (idGame, loser, card) => {\r\n    socket.emit('lostCardSelected', { idGame, loser, card});\r\n}\r\n\r\nexport const emitLostGame = (idGame, loser) => {\r\n    socket.emit('endGame', { idGame, loser });\r\n}\r\nexport const emitBlockAttackGlobal = (idGame) => {\r\n    socket.emit('blockCardAttackGlobal', { idGame });\r\n}\r\n\r\nexport const getSocket = () => {\r\n    return socket.id\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './MessageActions.css'\r\n\r\nconst MessageActions = () => {\r\n    const { action } = useSelector((state) => ({ ...state }));\r\n\r\n    return (\r\n        <div className=\"messageAction\">\r\n            {action.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageActions\r\n","import React, { useEffect } from 'react'\r\nimport './Message.css'\r\n\r\nconst Message = ({msg, setError}) => {\r\n    useEffect(() => {\r\n        setTimeout(() => \r\n            setError('')\r\n        , 3000)\r\n        // eslint-disable-next-line\r\n    }, []) \r\n\r\n    return (\r\n        <div className=\"message\">\r\n            {msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { emitLostGame, emitUseCard } from '../../utils/socket';\r\nimport './SelectOponent.css'\r\n\r\nconst SelectOponent = ({ gamers, card, setCardSelected, setError }) => {\r\n    const { user, game } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n\r\n    const playCard = (userSelected) => {\r\n        setCardSelected('')\r\n        switch (card) {\r\n            case 'capitan':\r\n                emitUseCard('capitan', game.idGame, userSelected, user.username)\r\n                dispatch({\r\n                    type: 'SET_ACTION',\r\n                    payload: {\r\n                        msg: `Atacaste a ${userSelected} con el Capitan`\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case 'asesina':\r\n                if (game.myUser.money.length > 2) {\r\n                    emitUseCard('asesina', game.idGame, userSelected, user.username)\r\n                    dispatch({\r\n                        type: 'SET_ACTION',\r\n                        payload: {\r\n                            msg: `Atacaste a ${userSelected} con la Asesina`\r\n                        }\r\n                    });\r\n                    return\r\n                }\r\n                setError('No tienes suficiente monedas.')\r\n                break;\r\n\r\n            case 'coup':\r\n                if (game.myUser.money.length > 6) {\r\n                    var attackedUser = game.gamer.filter(\r\n                        (g) => g.user === userSelected\r\n                    );\r\n                    if (attackedUser[0].cards.length === 1) {\r\n                        emitLostGame(game.idGame, userSelected)\r\n                        return\r\n                    } \r\n                    emitUseCard('coup', game.idGame, userSelected, user.username)\r\n                    dispatch({\r\n                        type: 'SET_ACTION',\r\n                        payload: {\r\n                            msg: `Atacaste a ${userSelected} con COUP`\r\n                        }\r\n                    });\r\n                    return\r\n                } else {\r\n                    setError('No tienes suficiente monedas.')\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"selectOponent\">\r\n            <h1>Selecciona tu oponente</h1>\r\n            <div style={{ display: 'flex' }}>\r\n                {\r\n                    gamers.map(g => (\r\n                        <button onClick={() => playCard(g.user)}>\r\n                            {g.user}\r\n                        </button>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectOponent\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport data from '../../cards.json';\r\nimport { emitAllow, emitBlockCard, emitLostCard, emitLostGame, emitTakeMoney, emitUseCard, emitUseCardGlobal } from '../../utils/socket';\r\nimport MessageActions from '../MessageActions/MessageActions';\r\nimport Message from '../MessageFeedback/Message';\r\nimport SelectOponent from '../SelectOponent/SelectOponent';\r\n\r\nimport './Controls.css'\r\n\r\nconst Controls = () => {\r\n    const { user, game, attacker, action } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [cardSelected, setCardSelected] = useState('')\r\n\r\n    const takeMoney = () => {\r\n        if(game.turn !== user.username || game.state === 'initial') {\r\n            setError('No es tu turno')\r\n            return\r\n        }\r\n        emitTakeMoney(game.idGame, user.username)\r\n        setCardSelected('')\r\n    }\r\n\r\n    const playCard = (card) => {\r\n        if(game.state === 'initial') {\r\n            setError('No es tu turno')\r\n            return\r\n        }\r\n        if (game.gamer.length === 1) {\r\n            switch (card) {\r\n                case 'capitan':\r\n                    game.turn = 'next'\r\n                    emitUseCard('capitan', game.idGame, game.gamer[0].user, user.username)\r\n                    dispatch({\r\n                        type: 'SET_ACTION',\r\n                        payload: {\r\n                            msg: `Atacaste a ${game.gamer[0].user} con el Capitan`\r\n                        }\r\n                    });\r\n                    break;\r\n            \r\n                case 'asesina':\r\n                    if(game.myUser.money.length > 2){\r\n                        game.turn = 'next'\r\n                        emitUseCard('asesina', game.idGame, game.gamer[0].user, user.username)\r\n                        dispatch({\r\n                            type: 'SET_ACTION',\r\n                            payload: {\r\n                                msg: `Atacaste a ${game.gamer[0].user} con la Asesina`\r\n                            }\r\n                        });\r\n                        return\r\n                    }\r\n                    setError('No tienes suficiente monedas.')\r\n                    break;\r\n                    \r\n                case 'coup':\r\n                    if (game.myUser.money.length > 6) {\r\n                        game.turn = 'next'\r\n                        if(game.gamer[0].cards.length === 1) {\r\n                            emitLostGame(game.idGame, game.gamer[0].user)\r\n                            return\r\n                        }\r\n                        emitUseCard('coup', game.idGame, game.gamer[0].user, user.username)\r\n                        dispatch({\r\n                            type: 'SET_ACTION',\r\n                            payload: {\r\n                                msg: `Atacaste a ${game.gamer[0].user} con COUP`\r\n                            }\r\n                        });\r\n                        return\r\n                    } else {\r\n                        setError('No tienes suficiente monedas.')\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            setCardSelected(card)\r\n        }\r\n    }\r\n\r\n    const playCardGlobal = (card) => {\r\n        if(game.state === 'initial') {\r\n            setError('No es tu turno')\r\n            return\r\n        }\r\n        switch (card) {\r\n            case 'embajador':\r\n                game.turn = 'next'\r\n                emitUseCardGlobal('embajador', game.idGame, user.username)\r\n                dispatch({\r\n                    type: 'SET_ACTION',\r\n                    payload: {\r\n                        msg: 'Usaste el Embajador'\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case 'duque':\r\n                game.turn = 'next'\r\n                emitUseCardGlobal('duque', game.idGame, user.username)\r\n                dispatch({\r\n                    type: 'SET_ACTION',\r\n                    payload: {\r\n                        msg: 'Usaste el Duque'\r\n                    }\r\n                });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const blockCard = (card) => {\r\n        emitBlockCard(card, game.idGame, attacker.attackedBy, user.username)\r\n        dispatch({\r\n            type: 'SET_ATTACKER',\r\n            payload: null\r\n        });\r\n        dispatch({\r\n            type: 'SET_ACTION',\r\n            payload: {\r\n                msg: `Bloqueaste a ${attacker.attackedBy} con ${card}`\r\n            }\r\n        });\r\n    }\r\n\r\n    const allow = () => {\r\n        if(attacker.card === 'asesina') {\r\n            dispatch({\r\n                type: 'SET_ATTACKER',\r\n                payload: null\r\n            });\r\n\r\n            if(game.myUser.cards.length === 1) {\r\n                emitLostGame(game.idGame, user.username)\r\n                return\r\n            }\r\n\r\n            dispatch({\r\n                type: 'LOST_CARD',\r\n                payload: {\r\n                    variable: 'lostCard'\r\n                }\r\n            });\r\n            return\r\n        }\r\n\r\n        emitAllow(game.idGame, user.username, attacker.attackedBy, attacker.card)\r\n        dispatch({\r\n            type: 'SET_ATTACKER',\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    const distrust = () => {\r\n        var userAttacker = game.gamer.filter(\r\n            (u) => u.user === attacker.attackedBy\r\n        );\r\n        var cardExist = userAttacker[0].cards.filter(\r\n            (c) => c === attacker.card\r\n        );\r\n        \r\n        if(!cardExist[0]) {\r\n            if (userAttacker[0].cards.length === 1) {\r\n                emitLostGame(game.idGame, attacker.attackedBy)\r\n                dispatch({\r\n                    type: 'SET_ATTACKER',\r\n                    payload: null\r\n                });\r\n                return\r\n            } \r\n            emitLostCard(game.idGame, attacker.attackedBy)\r\n            dispatch({\r\n                type: 'SET_ATTACKER',\r\n                payload: null\r\n            });\r\n        } else {\r\n            if(game.myUser.cards.length === 1) {\r\n                emitLostGame(game.idGame, user.username)\r\n                dispatch({\r\n                    type: 'SET_ATTACKER',\r\n                    payload: null\r\n                });\r\n                return\r\n            }\r\n\r\n            if(attacker.card === 'asesina') {\r\n                emitLostGame(game.idGame, user.username)\r\n                dispatch({\r\n                    type: 'SET_ATTACKER',\r\n                    payload: null\r\n                });\r\n                return\r\n            }\r\n\r\n            dispatch({\r\n                type: 'SET_ATTACKER',\r\n                payload: null\r\n            });\r\n            dispatch({\r\n                type: 'LOST_CARD',\r\n                payload: {\r\n                    variable: 'lostCard'\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                cardSelected && \r\n                <SelectOponent \r\n                    gamers={game.gamer} \r\n                    card={cardSelected} \r\n                    setCardSelected ={setCardSelected} \r\n                    setError={setError}\r\n                />\r\n            }\r\n            {error && <Message msg={error} setError={setError} />}\r\n            {action && <MessageActions />}\r\n            <div className=\"home__controls\">\r\n                <div className=\"home__controls-money\">\r\n                    {\r\n                        game && game.myUser.money.map(mon => (\r\n                            <div className=\"money\"></div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"home__controls-cards\">\r\n                    {\r\n                        game && game.myUser.cards.map((card, index) => (\r\n                            <div className=\"home__controls-card\" key={index}>\r\n                                <img src={`/cards/${card}.png`} alt=\"\" />\r\n                                <div className=\"detail-card\">\r\n                                    <p>{card}</p>\r\n                                    <span>{data[card]}</span>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"home__controls-bottons\">\r\n                    <button onClick={takeMoney}>Tomar Moneda</button>\r\n                    <button onClick={() => setShowMenu(!showMenu)}>Jugar</button>\r\n                </div>\r\n            </div>\r\n            {\r\n                showMenu \r\n                    ? game.turn === user.username ? (\r\n                            <div className=\"optionGame\">\r\n                                <button onClick={() => playCard('capitan')}>Tengo el Capitan</button>\r\n                                <button onClick={() => playCardGlobal('embajador')}>Tengo el Embajador</button>\r\n                                <button onClick={() => playCardGlobal('duque')}>Tengo el Duque</button>\r\n                                <button onClick={() => playCard('asesina')}>Tengo la Asesina</button>\r\n                                <button onClick={() => playCard('coup')}>COUP</button>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"optionGame\">\r\n                                {\r\n                                    attacker \r\n                                        ? attacker.card === 'capitan' \r\n                                            ? (\r\n                                                <>\r\n                                                <button onClick={() => blockCard('capitan')}>Tengo el Capitan</button>\r\n                                                <button onClick={() => blockCard('embajador')}>Tengo el Embajador</button>\r\n                                                <button onClick={distrust}>Desconfio</button>\r\n                                                <button onClick={allow}>Permitir</button>\r\n                                                </>\r\n                                            ) \r\n                                            : attacker.card === 'asesina' \r\n                                                ? (\r\n                                                    <>\r\n                                                    <button onClick={() => blockCard('condesa')}>Tengo la Condesa</button>\r\n                                                    <button onClick={distrust}>Desconfio</button>\r\n                                                    <button onClick={allow}>Permitir</button>\r\n                                                    </>\r\n                                                )\r\n                                                : attacker.card === 'duque' \r\n                                                    ? (\r\n                                                        <>\r\n                                                        <button onClick={distrust}>Desconfio</button>\r\n                                                        <button onClick={allow}>Permitir</button>\r\n                                                        </>\r\n                                                    )\r\n                                                    :  attacker.card === 'embajador' && (\r\n                                                        <>\r\n                                                        <button >Tengo el Duque</button>\r\n                                                        <button onClick={distrust}>Desconfio</button>\r\n                                                        <button onClick={allow}>Permitir</button>\r\n                                                        </>\r\n                                                    )\r\n\r\n                                        : (\r\n                                            <>\r\n                                            <button>Tengo el Capitan</button>\r\n                                            <button>Tengo el Embajador</button>\r\n                                            <button>Tengo la Condesa</button>\r\n                                            <button>Tengo el Duque</button>\r\n                                            <button>Desconfio</button>\r\n                                            </>\r\n                                        )\r\n                                }\r\n                            </div>\r\n                        )\r\n                    : ''\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Controls\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { emitReturnCardAmbassador } from '../../utils/socket';\r\n\r\nimport './DescartOneCard.css'\r\n\r\nconst DescartOneCard = () => {\r\n    const {descart, game } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n\r\n    const returnSelected = (card) => {\r\n        var i = descart.cards.indexOf( card );\r\n        descart.cards.splice( i, 1 );\r\n\r\n        const data = {\r\n            idGame: game.idGame,\r\n            cards: descart.cards,\r\n            returnCard: card,\r\n            user: descart.user \r\n        }\r\n        emitReturnCardAmbassador(data)\r\n        dispatch({\r\n            type: 'DESCART_CARD',\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"descartOneCard\">\r\n            <h2>Descartar Una</h2>\r\n            <div className=\"descartCard\">\r\n            {\r\n                descart.cards.map((card, index) => (\r\n                    <button key={index} onClick={() => returnSelected(card)}>{card}</button>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DescartOneCard\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { emitLostGame } from '../../utils/socket';\r\nimport Message from '../MessageFeedback/Message';\r\n\r\nimport './EndGameOption.css';\r\n\r\nconst EndGameOption = () => {\r\n    const [error, setError] = useState('')\r\n    const { user, game } = useSelector((state) => ({ ...state }));\r\n\r\n    const endGame = () => {\r\n        console.log(\"Salir\");\r\n        if(game.turn !== user.username) {\r\n            setError('No es tu turno. Puedes salir de la partida en tu turno.')\r\n            return\r\n        }\r\n        emitLostGame(game.idGame, user.username)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {error && <Message msg={error} setError={setError} />}\r\n        <div\r\n            onClick={endGame}\r\n            className=\"endGameOption\"\r\n        >\r\n            X\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EndGameOption\r\n","import React, { useState } from 'react'\r\nimport './Instructions.css';\r\n\r\nconst Instructions = ({position}) => {\r\n    const [showInstruction, setShowInstruction] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                onClick={() => setShowInstruction(true)} \r\n                className=\"instruction\"\r\n                style={{top: position}}\r\n            >\r\n                ?\r\n            </div>\r\n            {\r\n                showInstruction && (\r\n                    <div className=\"instruction_modal\">\r\n                        <div \r\n                            onClick={() => setShowInstruction(false)} \r\n                            className=\"instruction\"\r\n                            style={{top: position}}\r\n                        >\r\n                            X\r\n                        </div>\r\n                        <div className=\"instruction_container\">\r\n                            <h2>Un juego de estrategia y engaño para ser el unico jugador con alguna \r\n                            carta en mano.</h2>\r\n                            <br />\r\n\r\n                            <h3>Inicio del juego</h3>\r\n                            <div className=\"instruction-start_game\">\r\n                                <p>Maximo de 3 jugadores y minimo de 2.</p>\r\n                                <p>Cada jugador recibe 2 cartas y dos monedas.</p>\r\n                                <p>Los jugadores deben familiarizarse con todas las acciones\r\n                                y personajes antes de que el juego comience.</p>\r\n                            </div>\r\n\r\n                            <h3>Acciones Globales</h3>\r\n                            <div className=\"instruction-start_game\">\r\n                                <p><b>Tomar una moneda:</b> Solo toma una moneda y pasa el turno.</p>\r\n                                <p><b>Usar COUP:</b> Si tienes 7 monedas puedes usar esta accion para eliminar\r\n                                una carta a un jugador.</p>\r\n                                <p><b>Desconfiar:</b> Cuando alguien usa a un personaje puedes usar la accion \r\n                                de desconfiar si crees que no tiene ese personaje en su mano, pero\r\n                                CUIDADO si en verdad tiene al personaje automaticamente pierdes una \r\n                                carta. Pero si no la tiene ese jugador es quien pierde una carta.</p>\r\n                            </div>\r\n\r\n                            <h3>Acciones de Personajes</h3>\r\n                            <div className=\"instruction-start_game\">\r\n                                \r\n                                <b>Duque </b> \r\n                                <p>- Toma 3 monedas.</p>\r\n                                <p>- Bloquea intercambio al embajador.</p>\r\n\r\n                                <b>Asesina </b> \r\n                                <p>- Paga 3 monedas y asesina de un jugador. Si triunfa, este\r\n\t                            jugador pierde inmediatamente una carta.</p>\r\n                                <p>(Puede ser bloqueado por la condesa).</p>\r\n                                <p>Cuidado con la asesina, si un jugador usa la asesina y \r\n                                desconfias y el jugador si tiene la carta automaticamente \r\n                                pierdes dos cartas una por desconfiar y otra por el asesinato.\r\n                                De igual manera si finges tener la condesa y eres desafiado.</p>\r\n\r\n                                <b>Condesa </b> \r\n                                <p>- Bloquea a la asesina.</p>\r\n\r\n                                <b>Capitan </b> \r\n                                <p>- Roba 2 monedas a un jugador, si el jugador tiene solo una\r\n\t                            moneda pues solo roba una.</p>\r\n                                <p>- Puede bloquear robos de otro capitan.</p>\r\n                                <p>- (Puede ser bloqueado por el capitan y el embajador).</p>\r\n                                \r\n                                <b>Embajador </b> \r\n                                <p>- Puede intercambiar una carta con el mazo.</p>\r\n                                <p>- Bloquea robos del capitan.</p>\r\n                                <p>- (Puede ser bloqueado por el duque).</p>\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Instructions\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './Main.css'\r\n\r\nconst Main = () => {\r\n    const { game } = useSelector((state) => ({ ...state }));\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"home__main\">\r\n                \r\n                <div className=\"home__main-oponent1\">\r\n                    {\r\n                        game && game.gamer[0] && game.gamer[0].cards.map((card, index) => (\r\n                            <div key={index} className=\"home__main-oponent-card\"></div>\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n\r\n                <div className=\"home__main-table\">\r\n                    <div className=\"table-money\">\r\n                        <div className=\"money\" style={{margin: '-10px', position: 'absolute', border: '1px solid yellow' }}></div>\r\n                        <div className=\"money\" style={{border: '1px solid yellow'}}></div>\r\n                        <div className=\"money\" style={{margin: '-15px', border: '1px solid yellow'}}></div>\r\n                        <div className=\"money\" style={{marginTop: '-10px', position: 'absolute', border: '1px solid yellow' }}></div>\r\n                    </div>\r\n                    <div className=\"table-mazo\"></div>\r\n                </div>\r\n\r\n                <div className=\"home__main-oponent2\">\r\n                    {\r\n                        game && game.gamer[1] && game.gamer[1].cards.map((card, index) => (\r\n                            <div key={index} className=\"home__main-oponent-card\"></div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                game && game.gamer[0] && (\r\n                    <>\r\n                        <div className=\"Details-oponent1\">\r\n                            <h2>{game.gamer[0].user}</h2>\r\n                            <div className=\"money-aponent1\">\r\n                                {\r\n                                    game.gamer[0].money.map(mon => (\r\n                                        <div className=\"money\"></div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n\r\n\r\n            {\r\n                game && game.gamer[1] && (\r\n                    <>\r\n                        <div className=\"Details-oponent2\">\r\n                            <h2>{game.gamer[1].user}</h2>\r\n                            <div className=\"money-aponent2\">\r\n                                {\r\n                                    game.gamer[1].money.map(mon => (\r\n                                        <div className=\"money\"></div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './MessageAttacked.css'\r\n\r\nconst MessageAttacked = () => {\r\n    const { attacker } = useSelector((state) => ({ ...state }));\r\n    \r\n    return (\r\n        <div className=\"attacked\">\r\n          {`${attacker.attackedBy} esta usando ${attacker.card}`}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageAttacked\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { emitAllow, emitBlockAttackGlobal, emitBlockCard, emitLostCard, emitLostGame } from '../../utils/socket';\r\n\r\nimport './MessageAttackedGlobal.css'\r\n\r\nconst MessageAttackedGlobal = () => {\r\n    const { game, user, attackerGlobal } = useSelector((state) => ({ ...state }));\r\n    const [time, setTime] = useState(6)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(time > 0) {\r\n            setTimeout(() => setTime(time - 1), 1000)\r\n        } else {\r\n            dispatch({\r\n                type: 'SET_ATTACKER_GLOBAL',\r\n                payload: null\r\n            });\r\n            emitAllow(game.idGame, user.username, attackerGlobal.attackedBy, attackerGlobal.card)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [time])\r\n\r\n    const distrust = () => {\r\n        var userAttacker = game.gamer.filter(\r\n            (u) => u.user === attackerGlobal.attackedBy\r\n        );\r\n        var cardExist = userAttacker[0].cards.filter(\r\n            (c) => c === attackerGlobal.card\r\n        );\r\n\r\n        emitBlockAttackGlobal(game.idGame)\r\n        \r\n        if(!cardExist[0]) {\r\n            if(userAttacker[0].cards.length === 1) {\r\n                emitLostGame(game.idGame, attackerGlobal.attackedBy)\r\n                dispatch({\r\n                    type: 'SET_ATTACKER_GLOBAL',\r\n                    payload: null\r\n                });\r\n                return\r\n            }\r\n            emitLostCard(game.idGame, attackerGlobal.attackedBy)\r\n            dispatch({\r\n                type: 'SET_ATTACKER_GLOBAL',\r\n                payload: null\r\n            });\r\n        } else {\r\n            // Cambiar carta del bloqueador porque si tiene la carta (solo cambiar la carta no usar la habilidad)\r\n            dispatch({\r\n                type: 'SET_ATTACKER_GLOBAL',\r\n                payload: null\r\n            });\r\n\r\n            if(game.myUser.cards.length === 1) {\r\n                emitLostGame(game.idGame, user.username)\r\n                return\r\n            }\r\n\r\n            dispatch({\r\n                type: 'LOST_CARD',\r\n                payload: {\r\n                    variable: 'lostCard'\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const block = () => {\r\n        emitBlockCard('duque', game.idGame, attackerGlobal.attackedBy, user.username)\r\n        dispatch({\r\n            type: 'SET_ATTACKER_GLOBAL',\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"attackedGlobal\">\r\n            <span>Permitir en {time}</span>\r\n            {`${attackerGlobal.attackedBy} esta usando ${attackerGlobal.card}`}\r\n            <div style={{ display: 'flex'}}>\r\n                <button onClick={distrust}>Desconfio</button>\r\n                {\r\n                    attackerGlobal.card === 'embajador'\r\n                     && <button onClick={block}>Tengo el Duque</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageAttackedGlobal\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { emitAllowBlock, emitLostCard, emitLostGame } from '../../utils/socket';\r\n\r\nimport './MessageBlocked.css'\r\n\r\nconst MessageBlocked = () => {\r\n    const { user, game, blocker } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n\r\n    const allow = () => {\r\n        emitAllowBlock(game.idGame, user.username, blocker.blockedBy, blocker.card)\r\n        dispatch({\r\n            type: 'SET_BLOCKER',\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    const distrust = () => {\r\n        var userBlocker = game.gamer.filter(\r\n            (u) => u.user === blocker.blockedBy\r\n        );\r\n        var cardExist = userBlocker[0].cards.filter(\r\n            (c) => c === blocker.card\r\n        );\r\n        \r\n        if(!cardExist[0]) {\r\n            if(blocker.card === 'condesa') {\r\n                emitLostGame(game.idGame, blocker.blockedBy)\r\n                dispatch({\r\n                    type: 'SET_BLOCKER',\r\n                    payload: null\r\n                });\r\n                return\r\n            }\r\n            if (userBlocker[0].cards.length === 1) {\r\n                emitLostGame(game.idGame, blocker.blockedBy)\r\n                dispatch({\r\n                    type: 'SET_BLOCKER',\r\n                    payload: null\r\n                });\r\n                return\r\n            } \r\n            // user DEBE OBTENER OTRA CARTA\r\n            emitLostCard(game.idGame, blocker.blockedBy)\r\n            dispatch({\r\n                type: 'SET_BLOCKER',\r\n                payload: null\r\n            });\r\n        } else {\r\n            if(game.myUser.cards.length === 1) {\r\n                emitLostGame(game.idGame, user.username)\r\n                dispatch({\r\n                    type: 'SET_BLOCKER',\r\n                    payload: null\r\n                });\r\n                return\r\n            }\r\n            dispatch({\r\n                type: 'SET_BLOCKER',\r\n                payload: null\r\n            });\r\n            dispatch({\r\n                type: 'LOST_CARD',\r\n                payload: {\r\n                    variable: 'lostCard'\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"blocked\">\r\n            <p>{`${blocker.blockedBy} esta bloqueando con ${blocker.card}`}</p>\r\n            <div className=\"blocked_options\">\r\n                <button onClick={allow}>Permitir</button>\r\n                <button onClick={distrust}>Desconfiar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBlocked\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { emitLostCardSelected } from '../../utils/socket';\r\n\r\nimport './MessageCoup.css'\r\n\r\nconst MessageCoup = () => {\r\n    const { user, game, coup } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteCard = (card) => {\r\n        emitLostCardSelected(game.idGame, user.username, card)\r\n        dispatch({\r\n            type: 'SET_COUP',\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"coup\">\r\n            <h3>{`${coup.attackedBy} esta usando COUP`}</h3>\r\n            <p>Elimina una carta</p>\r\n            <div className=\"cards\">\r\n                {\r\n                    game && game.myUser.cards.map((card, index) => (\r\n                        <button \r\n                            key={index} \r\n                            className=\"card\"\r\n                            onClick={() => deleteCard(card)}\r\n                        >\r\n                            {card}\r\n                        </button>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageCoup\r\n","import React from 'react'\r\nimport './MessageGame.css';\r\n\r\nconst MessageGame = ({ msg }) => {\r\n    return (\r\n        <div className=\"messageGame\">\r\n            { msg }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageGame\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\n\r\nimport './MessageLost.css'\r\n\r\nconst MessageLost = () => {\r\n    const history = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const goHome = () => {\r\n        localStorage.removeItem('currentGame')\r\n        dispatch({\r\n            type: 'RESULT',\r\n            payload: null\r\n        });\r\n        history(`/`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"lost\">\r\n            <div className=\"container\">\r\n                <h1>PERDISTE EL JUEGO</h1>\r\n                <button onClick={goHome}>Ir al Inicio</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageLost\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { emitLostCardSelected } from '../../utils/socket';\r\n\r\nimport './MessageLostCard.css'\r\n\r\nconst MessageLostCard = () => {\r\n    const { user, game } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteCard = (card) => {\r\n        emitLostCardSelected(game.idGame, user.username, card)\r\n        dispatch({\r\n            type: 'LOST_CARD',\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"lostCard\">\r\n            <p>Elimina una carta</p>\r\n            <div className=\"cards\">\r\n                {\r\n                    game && game.myUser.cards.map((card, index) => (\r\n                        <button \r\n                            key={index} \r\n                            className=\"card\"\r\n                            onClick={() => deleteCard(card)}\r\n                        >\r\n                            {card}\r\n                        </button>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageLostCard\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport './MessageWin.css'\r\n\r\nconst MessageWin = () => {\r\n    const history = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const goHome = () => {\r\n        localStorage.removeItem('currentGame')\r\n        dispatch({\r\n            type: 'RESULT',\r\n            payload: null\r\n        });\r\n        history(`/`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"win\">\r\n            <div className=\"container\">\r\n                <h1>GANASTE EL JUEGO!</h1>\r\n                <button onClick={goHome}>Ir al Inicio</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageWin\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { emitStartGame } from '../../utils/socket';\r\n\r\nimport './Starting.css'\r\n\r\nconst Starting = () => {\r\n    const { user, game } = useSelector((state) => ({ ...state }));\r\n\r\n    const startGame = () => {\r\n        if(game.gamer.length >= 1) {\r\n            emitStartGame(game.idGame)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"starting\">\r\n            {\r\n                game.createdBy === user.username ? (\r\n                    <>\r\n                    <h3>Son {game.gamer.length + 1} Jugadores en espera</h3>\r\n                    <button onClick={startGame}>Comenzar Ahora</button>\r\n                    </>\r\n                ) : (\r\n                    <h3>Son {game.gamer.length + 1} Jugadores en espera</h3>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Starting\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nimport Controls from '../../components/Controls/Controls'\r\nimport DescartOneCard from '../../components/DescartOneCard/DescartOneCard';\r\nimport EndGameOption from '../../components/EndGameOption/EndGameOption';\r\nimport Instructions from '../../components/Instructions/Instructions';\r\nimport Main from '../../components/Main/Main'\r\nimport MessageAttacked from '../../components/MessageAttacked/MessageAttacked';\r\nimport MessageAttackedGlobal from '../../components/MessageAttackedGlobal/MessageAttackedGlobal';\r\nimport MessageBlocked from '../../components/MessageBlocked/MessageBlocked';\r\nimport MessageCoup from '../../components/MessageCoup/MessageCoup';\r\nimport MessageGame from '../../components/MessageGame/MessageGame';\r\nimport MessageLost from '../../components/MessageLost/MessageLost';\r\nimport MessageLostCard from '../../components/MessageLostCard/MessageLostCard';\r\nimport MessageWin from '../../components/MessageWin/MessageWin';\r\nimport Starting from '../../components/Starting/Starting';\r\nimport { emitGetGame, getSocket, init } from '../../utils/socket';\r\n\r\nimport \"./Home.css\"\r\n\r\nconst Home = () => {\r\n    const param = useParams();\r\n    const idGame = param.idGame;\r\n    const history = useNavigate()\r\n\r\n    const { \r\n        user, \r\n        game, \r\n        attacker, \r\n        attackerGlobal, \r\n        blocker, \r\n        variables, \r\n        result, \r\n        descart,\r\n        coup \r\n    } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            history('/login')\r\n        }\r\n        try {\r\n            getSocket();\r\n            \r\n            emitGetGame(idGame, user?.username);\r\n        } catch (error) {\r\n            init(dispatch)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [user])\r\n\r\n    return (\r\n        !result ? (\r\n            <div className=\"home\">\r\n                {\r\n                    game && game.state === 'initial' ? '' : game?.turn === user?.username ? (\r\n                        <MessageGame msg=\"Tu Turno\" />\r\n                    ) : (\r\n                        <MessageGame msg={`Turno de ${game && game?.turn}`} />\r\n                    )\r\n                }\r\n                {\r\n                    attacker && (<MessageAttacked />)\r\n                }\r\n                {\r\n                    attackerGlobal && (<MessageAttackedGlobal />)\r\n                }\r\n                {\r\n                    blocker && (<MessageBlocked />)\r\n                }\r\n                {\r\n                    variables && (<MessageLostCard />)\r\n                }\r\n                {\r\n                    coup && (<MessageCoup />)\r\n                }\r\n                {\r\n                    descart && (<DescartOneCard />)\r\n                }\r\n                <EndGameOption />\r\n                <Instructions position={'350px'} />\r\n                <Main />\r\n                <Controls />\r\n                {\r\n                    game && game.state === 'initial' && (\r\n                        <Starting />\r\n                    )\r\n                }\r\n            </div>\r\n        ) : result === 'lost'\r\n            ? (<MessageLost />)\r\n            : (<MessageWin />)\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios';\r\n\r\nconst clientAxios = axios.create({\r\n    baseURL: 'https://coup-alan.herokuapp.com/api'\r\n});\r\n\r\nexport default clientAxios;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport clientAxios from '../../utils/axios'\r\nimport Message from '../../components/MessageFeedback/Message'\r\n\r\nimport \"./Login.css\"\r\n\r\nconst Login = () => {\r\n    const [error, setError] = useState('')\r\n    const [data, setData] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const history = useNavigate()\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if(token) {\r\n            history('/')\r\n        }\r\n    }, [history])\r\n\r\n    const onChange = (e) => {\r\n        setData(prev => ({ ...prev, [e.target.name]: e.target.value}))\r\n    }\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        if (!data.username || !data.password) {\r\n            setError(\"Debes Completar Todos Los Campos\")\r\n            return\r\n        }\r\n        \r\n        clientAxios.post('/auth/login', data)\r\n            .then(res => {\r\n                localStorage.setItem('token', res.data.token)\r\n\r\n                dispatch({\r\n                    type: 'LOGGED_IN_USER',\r\n                    payload: {\r\n                        username: res.data.username\r\n                    }\r\n                });\r\n                history('/')\r\n            })\r\n            .catch(err => setError(\"Ocurrio un problema en el servidor. Intentelo de nuevo.\"))\r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        if (!data.username || !data.password) {\r\n            setError(\"Debes Completar Todos Los Campos\")\r\n            return\r\n        }\r\n        if (data.username.length < 4) {\r\n            setError(\"Nombre De Usuario Demasiado Corto\")\r\n            return\r\n        }\r\n        if (data.password.length < 6) {\r\n            setError(\"La Contraseña Debe Ser Mayor A 6 Caracteres\")\r\n            return\r\n        }\r\n        \r\n        clientAxios.post('/auth/register', data)\r\n            .then(res => {\r\n                localStorage.setItem('token', res.data.token)\r\n\r\n                dispatch({\r\n                    type: 'LOGGED_IN_USER',\r\n                    payload: {\r\n                        username: res.data.username\r\n                    }\r\n                });\r\n                history('/')\r\n            })\r\n            .catch(err => setError(\"Ya está en uso ese nombre de usuario.\"))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__card\">\r\n                <h2>Coup</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Nombre de usuario\"\r\n                    value={data.username}\r\n                    name=\"username\"\r\n                    onChange={onChange}\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Contraseña\"\r\n                    value={data.password}\r\n                    name=\"password\"\r\n                    onChange={onChange}\r\n                />\r\n                <br />\r\n                <button onClick={signIn}>Iniciar Sesion</button>\r\n                <p>o</p>\r\n                <button onClick={register}>Registrarse</button>\r\n            </div>\r\n            {error && <Message msg={error} setError={setError} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Instructions from '../../components/Instructions/Instructions'\r\n\r\nimport { emitDeleteGame, emitGetGames, emitJoinGame, emitOpenGame, init } from '../../utils/socket'\r\n\r\nimport './Start.css'\r\n\r\nconst Start = () => {\r\n    const history = useNavigate()\r\n\r\n    const [myGame, setMyGame] = useState('')\r\n\r\n    const { user, games } = useSelector((state) => ({ ...state }));\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            history('/login')\r\n        }\r\n        init(dispatch);\r\n        emitGetGames()\r\n        // obtener games\r\n        const currentGame = localStorage.getItem('currentGame');\r\n        if (currentGame) {\r\n            setMyGame(currentGame);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const openGame = () => {\r\n        const idGame = Math.floor(Math.random() * 100000000);\r\n        setMyGame(idGame);\r\n        localStorage.setItem('currentGame', idGame)\r\n        emitOpenGame(user.username, idGame);\r\n    }\r\n\r\n    const endGame = () => {\r\n        localStorage.removeItem('currentGame')\r\n        emitDeleteGame(user.username, myGame)\r\n        setMyGame('');\r\n    }\r\n\r\n    const startGame = (idGame) => {\r\n        history(`/${idGame}`)\r\n    }\r\n\r\n    const joinGame = (idGame) => {\r\n        emitJoinGame(user.username, idGame);\r\n        setMyGame(localStorage.setItem('currentGame', idGame));\r\n        localStorage.setItem('state', 'playing')\r\n        history(`/${idGame}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"start\">\r\n            <Instructions position={'20px'} />\r\n            <button\r\n                onClick={openGame}\r\n                className=\"openButton\"\r\n                disabled={myGame}\r\n            >\r\n                Abrir Partida\r\n            </button>\r\n            <div className=\"start__list\">\r\n                {\r\n                    myGame ? (\r\n                        <div key={myGame} className=\"container-games\" style={{ borderBottom: '1px solid #2b2b2b' }}>\r\n                            <div className=\"container__info\">\r\n                                <h2>Tu Juego</h2>\r\n                            </div>\r\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                <button onClick={() => startGame(myGame)} className=\"btn-start\">Iniciar</button>\r\n                                <button onClick={endGame} className=\"btn-end\">Cancelar</button>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        ''\r\n                    )\r\n                }\r\n\r\n                {\r\n                    games && games.filter(game => game.idGame !== myGame).map((game, index) => (\r\n                        <div className=\"container-games\" key={index}>\r\n                            <div className=\"container__info\">\r\n                                <h2>{game.createdBy}</h2>\r\n                            </div>\r\n                            {\r\n                                !myGame ? (\r\n                                    <button \r\n                                        onClick={() => joinGame(game.idGame)} \r\n                                        className=\"btn-start\"\r\n                                    >\r\n                                        Unirse\r\n                                    </button>\r\n                                ) : ''\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Start\r\n","import clientAxios from './axios'\r\n\r\nexport const currentUser = async (token) => {\r\n    return await clientAxios.post('/auth/current-user',\r\n        {},\r\n        {\r\n            headers: {\r\n                token\r\n            }\r\n        }\r\n    )\r\n}\r\n","import { useEffect } from 'react'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport Start from './pages/Start/Start';\n\nimport { currentUser } from './utils/api';\n\nimport './App.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n\n    if (token) {\n      currentUser(token)\n        .then(res => {\n          localStorage.setItem('token', res.data.token)\n          dispatch({\n            type: 'LOGGED_IN_USER',\n            payload: {\n              username: res.data.username\n            }\n          });\n        })\n        .catch(err => console.log(err));\n    }\n\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Start />} />\n          <Route path=\"/:idGame\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux';\r\n\r\nimport { actionsReducer } from './actionsReducer';\r\nimport { attackerGlobalReducer } from './attackerGlobalReducer';\r\nimport { attackerReducer } from './attackerReducer';\r\nimport { blockerReducer } from './blockerReducer';\r\nimport { coupReducer } from './coupReducer';\r\nimport { descartCardReducer } from './descartCardReducer';\r\nimport { gameReducer } from './gameReducer';\r\nimport { gamesReducer } from './gamesReducer';\r\nimport { resultReducer } from './resultReducer';\r\nimport {userReducer} from './userReducer'\r\nimport { variableReducer } from './variableReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    action: actionsReducer,\r\n    user: userReducer,\r\n    game: gameReducer,\r\n    games: gamesReducer,\r\n    attacker: attackerReducer,\r\n    attackerGlobal: attackerGlobalReducer,\r\n    blocker: blockerReducer,\r\n    variables: variableReducer,\r\n    result: resultReducer,\r\n    descart: descartCardReducer,\r\n    coup: coupReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","\r\nexport const actionsReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ACTION\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export const userReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"LOGGED_IN_USER\":\r\n            return action.payload;\r\n        case \"LOGOUT\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const gameReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"GET_GAME\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export const gamesReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"GET_GAMES\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport const attackerReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ATTACKER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport const attackerGlobalReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"SET_ATTACKER_GLOBAL\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport const blockerReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"SET_BLOCKER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export const variableReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"LOST_CARD\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const resultReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"RESULT\":\r\n            return action.payload;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport const descartCardReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"DESCART_CARD\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport const coupReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case \"SET_COUP\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}